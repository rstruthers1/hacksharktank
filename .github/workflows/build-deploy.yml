name: Build and Deploy Workflow

on:
  push:
    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build
        env:
          CI: ""
        run: |
          cd server
          ls
          npm install
          cd ../client
          ls
          npm install
          npm run build

      - name: Stop web server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: MY_VAR, DB_URL, JWT_SECRET
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            pm2 stop my-app

      # Deploy to DigitalOcean Droplet using appleboy/scp-action
      - name: Deploy to DigitalOcean
        # if: github.ref == 'refs/heads/main' # Conditional statement
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "server,client/build"
          target: "/home/github/hack-team-hub"

      - name: Start web server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          env:
            MY_VAR: ${{ secrets.MY_VAR }}
            DB_URL: ${{ secrets.DB_URL }}
            JWT_SECRET: ${{ secrets.JWT_SECRET }}
          script: |
            echo "*** MY_VAR = $MY_VAR"
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd hack-team-hub
            pm2 start --update-env my-app


